/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package jprobix.ui;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Random;
import javax.swing.JFrame;

/**
 *
 * @author epredator
 */
public class UI extends javax.swing.JFrame {
    int n =2;
    int k =1000;
    int bigSize =0;

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
        setTitle("1.1 Komputerowe generatory liczb losowych");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(600,480);
        setLocationRelativeTo(null);
    }
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        generateButton = new javax.swing.JButton();
        variablesWindow = new javax.swing.JTextField();
        nWindow = new javax.swing.JLabel();
        kWindow = new javax.swing.JLabel();
        kTextField = new javax.swing.JTextField();
        nTextField = new javax.swing.JTextField();
        longestView = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        terminalView = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Wpisz ciąg zer i jedynek:");

        generateButton.setText("Wygeneruj ciąg zer i jedynek:");
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        variablesWindow.setText("Puste");

        nWindow.setText("Wielkosc n-elementowego ciagu:");

        kWindow.setText("Maksymalna wielkosc k-elementowych blokow jedynek:");

        kTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kTextFieldActionPerformed(evt);
            }
        });
        kTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                kTextFieldFocusLost(evt);
            }
        });

        nTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nTextFieldActionPerformed(evt);
            }
        });
        nTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                nTextFieldFocusLost(evt);
            }
        });
        nTextField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                nTextFieldInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        nTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nTextFieldKeyTyped(evt);
            }
        });

        longestView.setAlignment(java.awt.Label.CENTER);
        longestView.setText("Najwiekszy ciag jedynek");

        terminalView.setColumns(20);
        terminalView.setRows(5);
        jScrollPane1.setViewportView(terminalView);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(generateButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(kWindow)
                                            .addComponent(nWindow))
                                        .addGap(29, 29, 29)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(kTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                                            .addComponent(nTextField))))
                                .addGap(0, 173, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(variablesWindow))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(longestView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nWindow)
                    .addComponent(nTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kWindow)
                    .addComponent(kTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(variablesWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generateButton)
                .addGap(56, 56, 56)
                .addComponent(longestView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        longestView.getAccessibleContext().setAccessibleName("");
        longestView.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
         Random zo= new Random();
         int sum = 0;
         
         ArrayList<Integer> all = new ArrayList<Integer>();
         //k - ilosc jedynek
         //n - ilosc liczb

         /*    int number;
                int numbers[] = new int[200]; 
                
                for (int i=0; i<1000; i++){
                   number = zo.nextInt(2);
                   numbers[i] = number;
                   //System.out.println(number + " ");
}*/          
               // int[] results = new int[100];

               for (int j = 0; j <= zo.nextInt(k); j++) {  
                all.addAll(generate());
               }
                
              
             
                
        
        this.variablesWindow.setText("");
        
    System.out.println(all + " ");
    this.variablesWindow.setText(this.variablesWindow.getText() + " " + all);
    System.out.println("Liczba wszystkich elementow ciagu: " + all.size());
    System.out.println("---------------------------");
     bigSize =0;
    }//GEN-LAST:event_generateButtonActionPerformed

    private void kTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kTextFieldActionPerformed

    private void nTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nTextFieldActionPerformed
        
    }//GEN-LAST:event_nTextFieldActionPerformed

    
 

    private void nTextFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_nTextFieldInputMethodTextChanged
                
    }//GEN-LAST:event_nTextFieldInputMethodTextChanged

    private void nTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nTextFieldKeyTyped
              
    }//GEN-LAST:event_nTextFieldKeyTyped

    private void nTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nTextFieldFocusLost
        try{
                 n = Integer.parseInt(nTextField.getText().trim());
                 
                 System.out.println( n + "Wielkosc n-elementowego ciagu");
               }catch (NumberFormatException nfe){
                   System.out.println("cannot enter N -variable try again");
               }
    }//GEN-LAST:event_nTextFieldFocusLost

    private void kTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kTextFieldFocusLost
     try{
        k = Integer.parseInt(kTextField.getText().trim());
      System.out.println(k + " - Maksymalna wielkosc k-elementowych blokow jedynek");
     }catch(NumberFormatException nfe){
         System.out.println("cannot enter K -variable try again");
     }
     
    }//GEN-LAST:event_kTextFieldFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField kTextField;
    private javax.swing.JLabel kWindow;
    private java.awt.Label longestView;
    private javax.swing.JTextField nTextField;
    private javax.swing.JLabel nWindow;
    private javax.swing.JTextArea terminalView;
    private javax.swing.JTextField variablesWindow;
    // End of variables declaration//GEN-END:variables

    private ArrayList<Integer> generate() {
        
        ArrayList<Integer> blocks = new ArrayList<Integer>();
        Random zo= new Random();
        int suma = 0;
        
        
                blocks.add(0, 0);
                for (int i = 0; i < zo.nextInt(k+1); i++) {
                 // sum = zo.nextInt(2);
                   
                  blocks.add(1);
                  suma++;
                }
                blocks.add(blocks.size(), 0);
                System.out.println("Ilosc jedynek w bloku: " + (blocks.size() - 2));
                
                if(blocks.size() >= bigSize){
                    bigSize =  blocks.size();
                    longestView.setText("Najwiekszy ciag jedynek to: " + String.valueOf((bigSize-2)));
                   // terminalView.setText
                  
                }
                return blocks;
    
    }
}
